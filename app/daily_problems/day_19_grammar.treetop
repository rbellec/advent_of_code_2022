grammar BluePrints
  rule blueprints
    (blueprint sp)+
  end

  rule blueprint
    'Blueprint' sp number sp ':' sp robot_cost+
  end

  rule robot_cost
    sp 'Each' sp material sp 'robot costs' sp first_cost:cost rest_costs:( sp 'and' sp cost)* '.'{
      def robot_blueprint
        # Here we could built an object. I stick with hashes since I am way over my "allowed" time.
        {material.as_symbol => agregated_cost}
      end

      def agregated_cost
        agregated_cost = first_cost.cost_hash
        rest_costs.elements.each{|element| agregated_cost.merge(element.cost.cost_hash)}
        agregated_cost
      end
    }
  end

  rule cost
    number sp material {
      def cost_hash
        {material.as_symbol => number.text_value.to_i}
      end
    }
  end

  rule number
    [0-9]+
  end

  rule material
    ('ore' / 'clay' / 'obsidian' / 'geode') {
      def as_symbol
        text_value.to_sym
      end
    }
  end

  rule sp
    [ \n\t]*
  end
end
